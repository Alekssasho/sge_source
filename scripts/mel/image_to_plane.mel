// <?php This is actually mel

// This scripts creates a planes and assignes to them materails
// that use 2D textures for their colors. Useful quickly importing 2D 
// things for animation.

// For debugging ... source "E:\\sge\\scripts\\mel\\image_to_plane.mel";

proc string obtainFilename(string $path)
{
  $filepart = match( "[^/\\]*$", $path );
  
  string $buffer[];
  tokenize $filepart "." $buffer;
  //$buffer = $filepart.split(".");

  return $buffer[0];
}

proc textureTo2DPlane(string $textureFileName)
{
	$filename = obtainFilename($textureFileName);
	
	// Create the texture and a 2D placement for it.
	$textureFile = `shadingNode -asTexture -isColorManaged file -name ("file_"+$filename)`;
	$texturePlacement2D = `shadingNode -asUtility place2dTexture`;
	connectAttr -f ($texturePlacement2D+".coverage") ($textureFile+".coverage");

	setAttr -type "string" ($textureFile+".fileTextureName") $textureFileName;
	
	// Create the material and attach the file as an input color.
	$material = `shadingNode -asShader lambert -name ("mtl_" + $filename)`;
	connectAttr -f ($textureFile+".outColor") ($material+".color");
	connectAttr -f ($textureFile+".outTransparency") ($material+".transparency");
	
	// Obtain the size of the texture.
	float $size[2] = `getAttr ($textureFile+".outSize")`;
	
	// " -axis 0 0 1" will make the "plane" in XY plane, facing Z.
	$mesh = `polyPlane -w ($size[0]) -h ($size[1]) -sx 10 -sy 10 -axis 0 0 1 -name ($filename)`;
	
	// Now apply the newly created material.
	// TODO: Check if we could do this without selecting.
	// TODO: Should I create a default shading group?
	select $mesh;
	hyperShade -assign ($material);
}

proc promptForFiles()
{
	string $filenames[] = `fileDialog2 -fileMode 4 -caption "Import Image"`;
	
	HypershadeWindow;
	for($i = 0; $i < size($filenames); $i++)
	{
		textureTo2DPlane($filenames[$i]);
	}
}

promptForFiles();

